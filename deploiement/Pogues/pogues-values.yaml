api:
  image:
    repository: inseefr/pogues-back-office
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: X.Y.Z

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/proxy-body-size: "0"
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    hosts:
      - host: pogues-back-office.example.com
        paths:
          - path: /

    tls:
      - hosts:
          - pogues-back-office.example.com

  properties: |-
    # SSL
    fr.insee.pogues.force.ssl=false
    # Log4J configuration File
    fr.insee.rmespogfo.log.configuration=log4j2.xml
    # Swagger host
    fr.insee.pogues.api.host = pogues-back-office.example.com
    fr.insee.pogues.api.name = /api
    fr.insee.pogues.api.scheme = https
    # Database properties
    fr.insee.pogues.persistence.database.host = pogues-postgresql
    fr.insee.pogues.persistence.database.port = 5432
    fr.insee.pogues.persistence.database.schema = Pogues
    fr.insee.pogues.persistence.database.user = Pogues
    fr.insee.pogues.persistence.database.password = password
    fr.insee.pogues.persistence.database.driver = org.postgresql.Driver
    fr.insee.pogues.persistence.database.table = Pogues
    # Authentication properties (NONE or OIDC)
    fr.insee.pogues.authentication = NONE
    # Role properties
    fr.insee.pogues.role.admin = Administrateur_Pogues
    fr.insee.pogues.role.user = Utilisateurs_Pogues
    # Metadata service
    fr.insee.pogues.api.remote.metadata.url = https://ddi-access-services.example.com/api
    # Stromae service - base eXist
    fr.insee.pogues.api.remote.stromae.host = https://stromae-db.example.com
    fr.insee.pogues.api.remote.stromae.vis.path = exist/apps/orbeon/visualize
    # Stromae service - Orbeon
    fr.insee.pogues.api.remote.stromae.orbeon.host = https://stromae.example.com
    # Queen service
    fr.insee.pogues.api.remote.queen.host = https://queen.example.com
    fr.insee.pogues.api.remote.queen.vis.path = queen/visualize?questionnaire=
    # Stromae-v2 service (web visualization with Lunatic)
    fr.insee.pogues.api.remote.stromaev2.vis.url = https://stromae-v2.example.com/visualize?questionnaire=
    # Eno service
    fr.insee.pogues.api.remote.eno.host = eno-ws.example.com
    fr.insee.pogues.api.remote.eno.scheme = https
ui:
  image:
    repository: loichenninger/pogues
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: dev-VTL-1.2.0

  env:
    API_URL: "https://pogues-back-office.example.com/api"

  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
    hosts:
      - host: pogues.example.com
        paths:
          - path: /

    tls:
      - hosts:
          - pogues.example.com

postgresql:
  postgresqlUsername: Pogues

  postgresqlPassword: password

  postgresqlDatabase: Pogues

  primary:
    extraInitContainers:
      - name: import-dump
        image: busybox
        command:
          [
            "wget",
            "https://stockage.example.com/pogues-bdd-backup.sql",
            "--output-document=/import/backup.sql",
          ]
        volumeMounts:
          - mountPath: /import
            name: import-volume

    extraVolumes:
      - name: import-volume
        emptyDir: {}

    extraVolumeMounts:
      - name: import-volume
        mountPath: "/docker-entrypoint-initdb.d"
